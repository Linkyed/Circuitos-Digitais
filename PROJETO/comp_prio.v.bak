module comp_prio(PERF_IE01, PERF_IE02, out);
	input [1:0] PERF_IE01, PERF_IE02; // ENTRADAS DO MODULO RELACIONADAS AO BINARIOS CIRADOS A PARTIR DO PERFIL DE CADA INTERFACE
	output out; // SAIDA DO MODULO RELACIONADA A QUAL DAS DUAS INTERFACES GANHARAM A PRIORIDADE
					// 1 PARA QUANDO A IE01 GANHA A PRIORIDADE e 0 PARA QUANDO A IE02 GANHA A PRIORIDADE
	wire PERF_IE02_not0, PERF_IE02_not1, // FIOS PARA SEREM UTILIZADOS NAS PORTAS INVERSORAS
	SUP1, SUP2, SUP3, SUP4, SUP5; // FIOS DE SUPORTE PARA SEREM LIGADOS NAS PORTAS LOGICAS
	
	// PORTAS INVERSORAS PARA UM DOIS DOS BITS DAS ENTRADAS
	not PERF_IE02_inv0(PERF_IE02_not0, PERF_IE02[0]);
	not PERF_IE02_inv1(PERF_IE02_not1, PERF_IE02[1]);

	// PORTAS LOGICAS INTERMEDIARIAS PARA FAZER A COMPARAÇÃO DE QUAL DAS INTERFACES GANHOU A PRIORIDADE
	and And0 (SUP1, PERF_IE01[0], PERF_IE01[1]);
	and And1 (SUP2, PERF_IE01[0], PERF_IE02_not0);
	and And2 (SUP3, PERF_IE01[0], PERF_IE02_not1);
	and And3 (SUP4, PERF_IE01[1], PERF_IE02_not0);
	and And4 (SUP5, PERF_IE02_not0, PERF_IE02_not1);
	
	// PORTA LOGICA OR PARA A SAIDA DO MODULO USANDO O RESULTADO DE TODAS AS PORTAS LOGICAS INTERMIDIARIAS
	or Or0 (out, SUP1, SUP2, SUP3, SUP4, SUP5);
	
	
endmodule