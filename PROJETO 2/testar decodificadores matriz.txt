module PBL2(CH7, CH6, CH5, CH4, CH3, CH2, CH1, CH0,
				B0, B1, B2, B3,
				clk,
				LED0, LED1, LED2, LED3, LED4, LED5, LED6, LED7, LED8, LED9,
				SEG7_A, SEG7_B, SEG7_C, SEG7_D, SEG7_E, SEG7_F, SEG7_G,
				MATRIZ_L0, MATRIZ_L1, MATRIZ_L2, MATRIZ_L3, MATRIZ_L4, MATRIZ_L5, MATRIZ_L6, 
				MATRIZ_C0, MATRIZ_C1, MATRIZ_C2, MATRIZ_C3, MATRIZ_C4,
				SEG7_Dig0, SEG7_Dig1, SEG7_Dig2, SEG7_Dig3,
				teste0, teste1, teste2);
		input CH7, CH6, CH5, CH4, CH3, CH2, CH1, CH0, B0, B1, B2, B3,
				clk;
		output SEG7_A, SEG7_B, SEG7_C, SEG7_D, SEG7_E, SEG7_F, SEG7_G,
				SEG7_Dig0, SEG7_Dig1, SEG7_Dig2, SEG7_Dig3, 
				 LED0, LED1, LED2, LED3, LED4, LED5, LED6, LED7, LED8, LED9,
				 MATRIZ_L0, MATRIZ_L1, MATRIZ_L2, MATRIZ_L3, MATRIZ_L4, MATRIZ_L5, MATRIZ_L6, 
				 MATRIZ_C0, MATRIZ_C1, MATRIZ_C2, MATRIZ_C3, MATRIZ_C4,
				 teste0, teste1, teste2;
		//assign T0, T1, T2, T3, T4, T5, T6, T7, T8, T9 ,T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34;
		wire [4:0] linha0, linha1, linha2, linha3, linha4, linha5, linha6, linha7, p_linha1, p_linha2, p_linha3, p_linha4, p_linha5, p_linha6, p_linha7, 
		out_linha1, out_linha2, out_linha3, out_linha4, out_linha5, out_linha6, out_linha7;
		wire [5:0] out_decod_linha0, out_decod_linha1, out_decod_linha2, out_decod_linha3, out_decod_linha4, out_decod_linha5, out_decod_linha6;
		wire [4:0] out_matriz; 
		wire [6:0] modo_jogo_7seg, linha_numero, coluna_letra, split;
		wire [7:0] ligar_linhas_matriz;
		wire [3:0] digitos_7seg, modos_jogo;
		wire div_CLK, cont_0, cont_1, cont_2, cont_0_not, cont_1_not, cont_2_not, cont_2bit1, cont_2bit0, cont_3bit2, cont_3bit1, cont_3bit0, B0_not, Atk_not,
		
		cod0_linha, cod1_linha, cod2_linha, cod0_coluna, cod1_coluna, cod2_coluna;
		
		divisor_clk divisor_clk (clk, 1, div_CLK);
		
		contador_sin_3bit contador (div_CLK, 1, cont_3bit2, cont_3bit1, cont_3bit0);
		
		decod_2_pra_4_not_invert verf_modo_jogo (CH1, CH0, modos_jogo);
		
		not (B0_not, B0);
		
		
		and ch7 (cod0_linha, CH7, modos_jogo[1], B0_not);
		and ch6 (cod1_linha, CH6, modos_jogo[1], B0_not);
		and ch5 (cod2_linha, CH5, modos_jogo[1], B0_not);
		and ch4 (cod0_coluna, CH4, modos_jogo[1], B0_not);
		and ch3 (cod1_coluna, CH3, modos_jogo[1], B0_not);
		and ch2 (cod2_coluna, CH2, modos_jogo[1], B0_not);
		
		decod_cordenadas decod_cordenadas(cod0_linha, cod1_linha, cod2_linha, cod0_coluna, cod1_coluna, cod2_coluna, p_linha1, p_linha2, p_linha3, p_linha4, p_linha5, p_linha6, p_linha7);
		
		and and0(linha1[0], 1, 0);
		and and1(linha1[1], 1, 0);
		and and2(linha1[2], 1, 0);
		and and3(linha1[3], 1, 1);
		and and4(linha1[4], 1, 1);
		
		and and5(linha2[0], 1, 1);
		and and6(linha2[1], 1, 1);
		and and7(linha2[2], 1, 0);
		and and8(linha2[3], 1, 0);
		and and9(linha2[4], 1, 0);
		
		and and10(linha3[0], 1, 0);
		and and11(linha3[1], 1, 1);
		and and12(linha3[2], 1, 0);
		and and13(linha3[3], 1, 0);
		and and14(linha3[4], 1, 0);
	
		and and15(linha4[0], 1, 0);
		and and16(linha4[1], 1, 0);
		and and17(linha4[2], 1, 1);
		and and18(linha4[3], 1, 0);
		and and19(linha4[4], 1, 0);
		
		and and20(linha5[0], 1, 1);
		and and21(linha5[1], 1, 0);
		and and22(linha5[2], 1, 1);
		and and23(linha5[3], 1, 1);
		and and24(linha5[4], 1, 0);
		
		and and25(linha6[0], 1, 1);
		and and26(linha6[1], 1, 0);
		and and27(linha6[2], 1, 1);
		and and28(linha6[3], 1, 0);
		and and29(linha6[4], 1, 0);
		
		and and30(linha7[0], 1, 0);
		and and31(linha7[1], 1, 0);
		and and32(linha7[2], 1, 1);
		and and33(linha7[3], 1, 0);
		and and34(linha7[4], 1, 0);
		
		verf_ataque verf_linha1 (linha1, p_linha1, modos_jogo[1], div_CLK, out_linha1);
		verf_ataque verf_linha2 (linha2, p_linha2, modos_jogo[1], div_CLK, out_linha2);
		verf_ataque verf_linha3 (linha3, p_linha3, modos_jogo[1], div_CLK, out_linha3);
		verf_ataque verf_linha4 (linha4, p_linha4, modos_jogo[1], div_CLK, out_linha4);
		verf_ataque verf_linha5 (linha5, p_linha5, modos_jogo[1], div_CLK, out_linha5);
		verf_ataque verf_linha6 (linha6, p_linha6, modos_jogo[1], div_CLK, out_linha6);
		verf_ataque verf_linha7 (linha7, p_linha7, modos_jogo[1], div_CLK, out_linha7);
		
		mux8_1 mux8_1(out_linha1, out_linha2, out_linha3, out_linha4, out_linha5, out_linha6, out_linha7, out_linha7, cont_3bit0, cont_3bit1, cont_3bit2, out_matriz);
		decod_3_pra_8 decod_linhas_matriz (cont_3bit0, cont_3bit1, cont_3bit2, ligar_linhas_matriz);
		not (MATRIZ_L0, ligar_linhas_matriz[0]);
		not (MATRIZ_L1, ligar_linhas_matriz[1]);
		not (MATRIZ_L2, ligar_linhas_matriz[2]);
		not (MATRIZ_L3, ligar_linhas_matriz[3]);
		not (MATRIZ_L4, ligar_linhas_matriz[4]);
		not (MATRIZ_L5, ligar_linhas_matriz[5]);
		not (MATRIZ_L6, ligar_linhas_matriz[6]);

		
		assign MATRIZ_C0 = out_matriz[0];
		assign MATRIZ_C1 = out_matriz[1];
		assign MATRIZ_C2 = out_matriz[2];
		assign MATRIZ_C3 = out_matriz[3];
		assign MATRIZ_C4 = out_matriz[4];
		
		
endmodule