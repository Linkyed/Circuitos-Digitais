// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "09/03/2023 19:01:53"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          TESTES
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module TESTES_vlg_vec_tst();
// constants                                           
// general purpose registers
reg B0;
reg B1;
reg B2;
reg B3;
reg CH0;
reg CH1;
reg CH2;
reg CH3;
reg CH4;
reg CH5;
reg CH6;
reg CH7;
// wires                                               
wire LED0;
wire LED1;
wire LED2;
wire LED3;
wire LED4;
wire LED5;
wire MCOL_LED0;
wire M_LED0;
wire M_LED1;
wire M_LED2;
wire M_LED3;
wire M_LED4;
wire M_LED5;
wire M_LED6;
wire RGB_b;
wire RGB_g;
wire RGB_r;

// assign statements (if any)                          
TESTES i1 (
// port map - connection between master ports and signals/registers   
	.B0(B0),
	.B1(B1),
	.B2(B2),
	.B3(B3),
	.CH0(CH0),
	.CH1(CH1),
	.CH2(CH2),
	.CH3(CH3),
	.CH4(CH4),
	.CH5(CH5),
	.CH6(CH6),
	.CH7(CH7),
	.LED0(LED0),
	.LED1(LED1),
	.LED2(LED2),
	.LED3(LED3),
	.LED4(LED4),
	.LED5(LED5),
	.MCOL_LED0(MCOL_LED0),
	.M_LED0(M_LED0),
	.M_LED1(M_LED1),
	.M_LED2(M_LED2),
	.M_LED3(M_LED3),
	.M_LED4(M_LED4),
	.M_LED5(M_LED5),
	.M_LED6(M_LED6),
	.RGB_b(RGB_b),
	.RGB_g(RGB_g),
	.RGB_r(RGB_r)
);
initial 
begin 
#240000 $finish;
end 

// B0
initial
begin
	B0 = 1'b0;
end 

// B1
initial
begin
	B1 = 1'b0;
end 

// B2
initial
begin
	B2 = 1'b0;
end 

// B3
initial
begin
	B3 = 1'b0;
end 

// CH0
initial
begin
	CH0 = 1'b0;
end 

// CH1
initial
begin
	CH1 = 1'b0;
end 

// CH2
initial
begin
	CH2 = 1'b0;
end 

// CH3
initial
begin
	CH3 = 1'b0;
end 

// CH4
initial
begin
	CH4 = 1'b1;
end 

// CH5
initial
begin
	CH5 = 1'b0;
end 

// CH6
initial
begin
	CH6 = 1'b1;
end 

// CH7
initial
begin
	CH7 = 1'b1;
end 
endmodule

