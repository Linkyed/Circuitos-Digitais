// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "09/04/2023 14:53:44"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module decod_7seg (
	a,
	b,
	c,
	d,
	e,
	f,
	g,
	MSB,
	B,
	LSB,
	Func);
output 	a;
output 	b;
output 	c;
output 	d;
output 	e;
output 	f;
output 	g;
input 	MSB;
input 	B;
input 	LSB;
input 	Func;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \MSB~combout ;
wire \LSB~combout ;
wire \Func~combout ;
wire \B~combout ;
wire \MOSTRAR_E~0_combout ;
wire \MOSTRAR_C~combout ;
wire \MOSTRAR_D~0_combout ;
wire \MOSTRAR_E~1_combout ;
wire \MOSTRAR_F~combout ;
wire \MOSTRAR_G~0_combout ;


// Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \MSB~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\MSB~combout ),
	.padio(MSB));
// synopsys translate_off
defparam \MSB~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_3,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \LSB~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\LSB~combout ),
	.padio(LSB));
// synopsys translate_off
defparam \LSB~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_16,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \Func~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\Func~combout ),
	.padio(Func));
// synopsys translate_off
defparam \Func~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_53,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \B~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\B~combout ),
	.padio(B));
// synopsys translate_off
defparam \B~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y2_N4
maxii_lcell \MOSTRAR_E~0 (
// Equation(s):
// \MOSTRAR_E~0_combout  = (\Func~combout  & ((\LSB~combout  $ (!\B~combout )) # (!\MSB~combout )))

	.clk(gnd),
	.dataa(\MSB~combout ),
	.datab(\LSB~combout ),
	.datac(\Func~combout ),
	.datad(\B~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\MOSTRAR_E~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \MOSTRAR_E~0 .lut_mask = "d070";
defparam \MOSTRAR_E~0 .operation_mode = "normal";
defparam \MOSTRAR_E~0 .output_mode = "comb_only";
defparam \MOSTRAR_E~0 .register_cascade_mode = "off";
defparam \MOSTRAR_E~0 .sum_lutc_input = "datac";
defparam \MOSTRAR_E~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N5
maxii_lcell MOSTRAR_C(
// Equation(s):
// \MOSTRAR_C~combout  = ((!\MSB~combout  & (\LSB~combout  & !\B~combout ))) # (!\Func~combout )

	.clk(gnd),
	.dataa(\MSB~combout ),
	.datab(\LSB~combout ),
	.datac(\Func~combout ),
	.datad(\B~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\MOSTRAR_C~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam MOSTRAR_C.lut_mask = "0f4f";
defparam MOSTRAR_C.operation_mode = "normal";
defparam MOSTRAR_C.output_mode = "comb_only";
defparam MOSTRAR_C.register_cascade_mode = "off";
defparam MOSTRAR_C.sum_lutc_input = "datac";
defparam MOSTRAR_C.synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N9
maxii_lcell \MOSTRAR_D~0 (
// Equation(s):
// \MOSTRAR_D~0_combout  = (\MSB~combout ) # (((!\Func~combout )) # (!\LSB~combout ))

	.clk(gnd),
	.dataa(\MSB~combout ),
	.datab(\LSB~combout ),
	.datac(\Func~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\MOSTRAR_D~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \MOSTRAR_D~0 .lut_mask = "bfbf";
defparam \MOSTRAR_D~0 .operation_mode = "normal";
defparam \MOSTRAR_D~0 .output_mode = "comb_only";
defparam \MOSTRAR_D~0 .register_cascade_mode = "off";
defparam \MOSTRAR_D~0 .sum_lutc_input = "datac";
defparam \MOSTRAR_D~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N2
maxii_lcell \MOSTRAR_E~1 (
// Equation(s):
// \MOSTRAR_E~1_combout  = ((\MSB~combout  & (\LSB~combout  $ (\B~combout ))) # (!\MSB~combout  & (\LSB~combout  & \B~combout ))) # (!\Func~combout )

	.clk(gnd),
	.dataa(\MSB~combout ),
	.datab(\LSB~combout ),
	.datac(\Func~combout ),
	.datad(\B~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\MOSTRAR_E~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \MOSTRAR_E~1 .lut_mask = "6f8f";
defparam \MOSTRAR_E~1 .operation_mode = "normal";
defparam \MOSTRAR_E~1 .output_mode = "comb_only";
defparam \MOSTRAR_E~1 .register_cascade_mode = "off";
defparam \MOSTRAR_E~1 .sum_lutc_input = "datac";
defparam \MOSTRAR_E~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N8
maxii_lcell MOSTRAR_F(
// Equation(s):
// \MOSTRAR_F~combout  = ((\MSB~combout  & (!\LSB~combout  & \B~combout )) # (!\MSB~combout  & (\LSB~combout ))) # (!\Func~combout )

	.clk(gnd),
	.dataa(\MSB~combout ),
	.datab(\LSB~combout ),
	.datac(\Func~combout ),
	.datad(\B~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\MOSTRAR_F~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam MOSTRAR_F.lut_mask = "6f4f";
defparam MOSTRAR_F.operation_mode = "normal";
defparam MOSTRAR_F.output_mode = "comb_only";
defparam MOSTRAR_F.register_cascade_mode = "off";
defparam MOSTRAR_F.sum_lutc_input = "datac";
defparam MOSTRAR_F.synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N6
maxii_lcell \MOSTRAR_G~0 (
// Equation(s):
// \MOSTRAR_G~0_combout  = (\Func~combout  & (((\LSB~combout ) # (!\B~combout )) # (!\MSB~combout )))

	.clk(gnd),
	.dataa(\MSB~combout ),
	.datab(\LSB~combout ),
	.datac(\Func~combout ),
	.datad(\B~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\MOSTRAR_G~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \MOSTRAR_G~0 .lut_mask = "d0f0";
defparam \MOSTRAR_G~0 .operation_mode = "normal";
defparam \MOSTRAR_G~0 .output_mode = "comb_only";
defparam \MOSTRAR_G~0 .register_cascade_mode = "off";
defparam \MOSTRAR_G~0 .sum_lutc_input = "datac";
defparam \MOSTRAR_G~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_58,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \a~I (
	.datain(!\MOSTRAR_E~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(a));
// synopsys translate_off
defparam \a~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_6,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \b~I (
	.datain(!\Func~combout ),
	.oe(vcc),
	.combout(),
	.padio(b));
// synopsys translate_off
defparam \b~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_37,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \c~I (
	.datain(\MOSTRAR_C~combout ),
	.oe(vcc),
	.combout(),
	.padio(c));
// synopsys translate_off
defparam \c~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \d~I (
	.datain(\MOSTRAR_D~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(d));
// synopsys translate_off
defparam \d~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_39,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \e~I (
	.datain(\MOSTRAR_E~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(e));
// synopsys translate_off
defparam \e~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_49,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \f~I (
	.datain(\MOSTRAR_F~combout ),
	.oe(vcc),
	.combout(),
	.padio(f));
// synopsys translate_off
defparam \f~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_62,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \g~I (
	.datain(!\MOSTRAR_G~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(g));
// synopsys translate_off
defparam \g~I .operation_mode = "output";
// synopsys translate_on

endmodule
